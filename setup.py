#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ TenderBot
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def print_banner():
    """–í—ã–≤–æ–¥–∏—Ç –±–∞–Ω–Ω–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("""
ü§ñ TenderBot - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
=====================================

Telegram-–±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–Ω–¥–µ—Ä–æ–≤ –≤ –≥–æ—Å–∑–∞–∫—É–ø–∫–∞—Ö
–í–µ—Ä—Å–∏—è —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏: retry-–ª–æ–≥–∏–∫–∞, –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ, –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    """)

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏—é Python"""
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        sys.exit(1)
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} - OK")

def install_dependencies():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        sys.exit(1)

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª .env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"""
    env_example = Path("env_example.txt")
    env_file = Path(".env")
    
    if env_file.exists():
        print("‚ö†Ô∏è –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return
    
    if not env_example.exists():
        print("‚ùå –§–∞–π–ª env_example.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    shutil.copy(env_example, env_file)
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞")
    print("üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å API –∫–ª—é—á–∏ –≤ —Ñ–∞–π–ª–µ .env")

def create_directories():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    directories = ["downloads", "logs"]
    
    for directory in directories:
        Path(directory).mkdir(exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

def check_vpn_setup():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É VPN"""
    print("\nüîí –ü—Ä–æ–≤–µ—Ä–∫–∞ VPN –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    try:
        result = subprocess.run(["wg", "show"], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ WireGuard VPN –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print("‚ö†Ô∏è WireGuard VPN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            print("   –î–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenAI API —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å VPN")
    except FileNotFoundError:
        print("‚ö†Ô∏è WireGuard –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("   –î–ª—è —Ä–∞–±–æ—Ç—ã —Å OpenAI API —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WireGuard")

def run_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã"""
    print("\nüß™ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
        import config
        import downloader
        import analyzer
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    return True

def check_new_features():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"""
    print("\nüÜï –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º retry-–ª–æ–≥–∏–∫—É
        print("‚úÖ Retry-–ª–æ–≥–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    check_python_version()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    install_dependencies()
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    create_directories()
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .env
    create_env_file()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º VPN
    check_vpn_setup()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    tests_ok = run_tests()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    features_ok = check_new_features()
    
    print("\n" + "="*50)
    print("üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    
    if tests_ok and features_ok:
        print("\n‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        print("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python bot.py")
    else:
        print("\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:")
        if not tests_ok:
            print("   - –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –∫–æ–¥–µ")
        if not features_ok:
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    
    print("\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: README.md")
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞: env_example.txt")
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: python test_bot.py")

if __name__ == "__main__":
    main() 